#
# Nimbella CONFIDENTIAL
# ---------------------
#
#   2018 - present Nimbella Corp
#   All Rights Reserved.
#
# NOTICE:
#
# All information contained herein is, and remains the property of
# Nimbella Corp and its suppliers, if any.  The intellectual and technical
# concepts contained herein are proprietary to Nimbella Corp and its
# suppliers and may be covered by U.S. and Foreign Patents, patents
# in process, and are protected by trade secret or copyright law.
#
# Dissemination of this information or reproduction of this material
# is strictly forbidden unless prior written permission is obtained
# from Nimbella Corp.
#

# This tests the feature that supports selective deployment (--include and --exclude)

SELFDIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"

cd $SELFDIR

set -e

# Deploy just the web content and no packages
echo "Deploying web only"
nim namespace clean --force
nim project deploy printer --include web
OW=$(nim namespace get)
WEB=$(nim web list)
if [[ "$OW" == *"printer"* ]] || [[ "$OW" == *"admin"* ]]; then
	 echo "Error: packages were deployed but only web content should have been was expected"
	 exit 1
fi
if [[ "$WEB" != *"index.html"* ]]; then
   echo "Error: web content was not deployed but should have been"
   exit 1
fi  

# Deploy everything except the admin package
echo "Deploying all but the admin package"
nim namespace clean --force
nim project deploy printer --exclude admin
OW=$(nim namespace get)
WEB=$(nim web list)
if [[ "$OW" == *"admin"* ]]; then
	 echo "Error: the admin package was deployed but should not have been"
	 exit 1
fi
if [[ "$OW" != *"printer"* ]]; then
	 echo "Error: the printer package was not deployed but should have been"
	 exit 1
fi
if [[ "$WEB" != *"index.html"* ]]; then
   echo "Error: web content was not deployed but should have been"
   exit 1
fi  


# Deploy both packages, no web, and exclude printer/notify and printer/update
echo "Deploying admin, some of printer, no web"
nim namespace clean --force
nim project deploy printer --include admin/,printer --exclude printer/notify,printer/update
OW=$(nim namespace get)
WEB=$(nim web list)
if [[ "$OW" != *"admin"* ]]; then
	 echo "Error: the admin package was not deployed but should have been"
	 exit 1
fi
if [[ "$OW" == *"printer/notify"* ]]; then
	 echo "Error: the printer/notify action was deployed but should not have been"
	 exit 1
fi
if [[ "$OW" == *"printer/update"* ]]; then
	 echo "Error: the printer/update action was deployed but should not have been"
	 exit 1
fi
if [[ "$OW" != *"printer/get"* ]]; then
	 echo "Error: the printer/get action was not deployed but should not have been"
	 exit 1
fi
if [[ "$OW" != *"printer/create"* ]]; then
	 echo "Error: the printer/create action was not deployed but should have been"
	 exit 1
fi
if [[ "$OW" != *"printer/list"* ]]; then
	 echo "Error: the printer/list action was not deployed but should not have been"
	 exit 1
fi
if [[ "$WEB" == *"index.html"* ]]; then
   echo "Error: web content was deployed but should not have been"
   exit 1
fi

# Deploy only printer/notify
echo "Deploying only printer/notify"
nim namespace clean --force
nim project deploy printer --include printer/notify
OW=$(nim namespace get)
WEB=$(nim web list)
if [[ "$OW" == *"admin"* ]]; then
	 echo "Error: the admin package was deployed but should not have been"
	 exit 1
fi
if [[ "$OW" != *"printer/notify"* ]]; then
	 echo "Error: the printer/notify action was not deployed but should have been"
	 exit 1
fi
if [[ "$OW" == *"printer/update"* ]]; then
	 echo "Error: the printer/update action was deployed but should not have been"
	 exit 1
fi
if [[ "$OW" == *"printer/get"* ]]; then
	 echo "Error: the printer/get action was not deployed but should not have been"
	 exit 1
fi
if [[ "$OW" == *"printer/create"* ]]; then
	 echo "Error: the printer/create action was deployed but should not have been"
	 exit 1
fi
if [[ "$OW" == *"printer/list"* ]]; then
	 echo "Error: the printer/list action was deployed but should not have been"
	 exit 1
fi
if [[ "$WEB" == *"index.html"* ]]; then
   echo "Error: web content was deployed but should not have been"
   exit 1
fi

echo "Test succeeded"
