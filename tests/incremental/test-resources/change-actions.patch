diff -ruN example/packages/incremental/action3.js diff/packages/incremental/action3.js
--- example/packages/incremental/action3.js	2021-03-22 14:30:15.000000000 +0000
+++ diff/packages/incremental/action3.js	2021-03-22 14:43:46.000000000 +0000
@@ -1,25 +1,7 @@
-let nim = require('nim')
-let key = 'counter'
-
 function main(args) {
     let expr = args['text']
     let result = eval(expr)
-    let redis = nim.redis()
-    return redis.getAsync(key)
-      .then(reply => { return updateAndReply(redis, asCount(reply), result) })
-      .catch(err =>  { return updateAndReply(redis, 0, result) } )
-}
-
-function asCount(s) {
-    if (Number.isInteger(s)) { return s }
-    let v = parseInt(s, 10)
-    return isNaN(v) ? 0 : v
-}
-
-function updateAndReply(redis, count, text) {
-    return redis.setAsync(key, count+1)
-      .then(reply => { return { count: count, result: text } })
-      .catch(err =>  { return { count: count, result: text } })
+    return { 'result': result }
 }
 
 exports.main = main
diff -ruN example/packages/incremental/action4.js diff/packages/incremental/action4.js
--- example/packages/incremental/action4.js	2021-03-22 14:30:15.000000000 +0000
+++ diff/packages/incremental/action4.js	2021-03-22 14:43:47.000000000 +0000
@@ -1,25 +1,7 @@
-let nim = require('nim')
-let key = 'counter'
-
 function main(args) {
     let expr = args['text']
     let result = eval(expr)
-    let redis = nim.redis()
-    return redis.getAsync(key)
-      .then(reply => { return updateAndReply(redis, asCount(reply), result) })
-      .catch(err =>  { return updateAndReply(redis, 0, result) } )
-}
-
-function asCount(s) {
-    if (Number.isInteger(s)) { return s }
-    let v = parseInt(s, 10)
-    return isNaN(v) ? 0 : v
-}
-
-function updateAndReply(redis, count, text) {
-    return redis.setAsync(key, count+1)
-      .then(reply => { return { count: count, result: text } })
-      .catch(err =>  { return { count: count, result: text } })
+    return { 'result': result }
 }
 
 exports.main = main
